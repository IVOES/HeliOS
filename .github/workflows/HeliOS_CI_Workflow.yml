name: HeliOS CI Workflow

on:

  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

  workflow_dispatch:

jobs:
  build-test-doc: 
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout HeliOS...
        uses: actions/checkout@v3

      - name: Build HeliOS unit tests...
        shell: bash
        run: gcc -fdiagnostics-color=always -O0 -ggdb -std=c89 -Wall -Wextra -Wno-unused-parameter -I${{github.workspace}}/src -I${{github.workspace}}/extras/test/src/harness -I${{github.workspace}}/extras/test/src/unit -DPOSIX_ARCH_OTHER -DCONFIG_MEMORY_REGION_SIZE_IN_BLOCKS=0x1C20u -DCONFIG_ENABLE_SYSTEM_ASSERT -o${{github.workspace}}/extras/test/bin/test ${{github.workspace}}/src/*.c ${{github.workspace}}/extras/test/src/*.c ${{github.workspace}}/extras/test/src/harness/*.c ${{github.workspace}}/extras/test/src/unit/*.c

      - name: Run HeliOS unit tests...
        shell: bash
        run: ${{github.workspace}}/extras/test/bin/test

      - name: Install Cppcheck...
        shell: bash
        run: |
          sudo apt update
          sudo apt -y install cppcheck
      
      - name: Run Cppcheck...
        shell: bash
        run: |
          cppcheck --quiet --language=c --platform=unix64 --max-ctu-depth=8 --cppcheck-build-dir=${{github.workspace}}/build --template="::{severity} file={file},line={line},col={column}::{message}" --enable=all --std=c89 -DPOSIX_ARCH_OTHER ${{github.workspace}}/src/

      - name: Install Doxygen and LaTeX...
        shell: bash
        run: |
          sudo apt update
          sudo apt -y install doxygen-latex

      - name: Create Doxygen config...
        shell: bash
        run: |
          mkdir ${{github.workspace}}/temp          
          doxygen -g ${{github.workspace}}/temp/HeliOS.conf
          sed -i '/^$/d' ${{github.workspace}}/temp/HeliOS.conf
          sed -i '/^#.*/d' ${{github.workspace}}/temp/HeliOS.conf
          sed -i 's~^PROJECT_NAME .*~PROJECT_NAME = HeliOS~' ${{github.workspace}}/temp/HeliOS.conf
          sed -i 's~^PROJECT_NUMBER .*~PROJECT_NUMBER = Kernel 0.3.5~' ${{github.workspace}}/temp/HeliOS.conf
          sed -i 's~^PROJECT_LOGO .*~PROJECT_LOGO = ${{github.workspace}}/temp/HeliOS_OG_Logo.png~' ${{github.workspace}}/temp/HeliOS.conf
          sed -i 's~^OUTPUT_DIRECTORY .*~OUTPUT_DIRECTORY = ${{github.workspace}}/temp~' ${{github.workspace}}/temp/HeliOS.conf
          sed -i 's~^OPTIMIZE_OUTPUT_FOR_C .*~OPTIMIZE_OUTPUT_FOR_C = YES~' ${{github.workspace}}/temp/HeliOS.conf
          sed -i 's~^GENERATE_HTML .*~GENERATE_HTML = NO~' ${{github.workspace}}/temp/HeliOS.conf
          sed -i 's~^GENERATE_LATEX .*~GENERATE_LATEX = YES~' ${{github.workspace}}/temp/HeliOS.conf
          sed -i 's~^COMPACT_LATEX .*~COMPACT_LATEX = YES~' ${{github.workspace}}/temp/HeliOS.conf
          sed -i 's~^GENERATE_RTF .*~GENERATE_RTF = NO~' ${{github.workspace}}/temp/HeliOS.conf
          sed -i 's~^GENERATE_MAN .*~GENERATE_MAN = NO~' ${{github.workspace}}/temp/HeliOS.conf
          sed -i 's~^GENERATE_XML .*~GENERATE_XML = NO~' ${{github.workspace}}/temp/HeliOS.conf
          sed -i 's~^REPEAT_BRIEF .*~REPEAT_BRIEF = NO~' ${{github.workspace}}/temp/HeliOS.conf
          sed -i 's~^FULL_PATH_NAMES .*~FULL_PATH_NAMES = NO~' ${{github.workspace}}/temp/HeliOS.conf
          sed -i 's~^INPUT .*~INPUT = ${{github.workspace}}/src/config.h ${{github.workspace}}/src/HeliOS.h~' ${{github.workspace}}/temp/HeliOS.conf
          sed -i 's~^FILE_PATTERNS .*~FILE_PATTERNS = XXX~' ${{github.workspace}}/temp/HeliOS.conf
          sed -i '/*./d' ${{github.workspace}}/temp/HeliOS.conf
          sed -i 's~^FILE_PATTERNS .*~FILE_PATTERNS = *.h~' ${{github.workspace}}/temp/HeliOS.conf
          sed -i 's~^RECURSIVE .*~RECURSIVE = NO~' ${{github.workspace}}/temp/HeliOS.conf
          sed -i 's~^CLASS_DIAGRAMS .*~CLASS_DIAGRAMS = NO~' ${{github.workspace}}/temp/HeliOS.conf
          sed -i 's~^HAVE_DOT .*~HAVE_DOT = NO~' ${{github.workspace}}/temp/HeliOS.conf
          sed -i 's~^PROJECT_BRIEF .*~PROJECT_BRIEF = ~' ${{github.workspace}}/temp/HeliOS.conf
          sed -i 's~^SHOW_HEADERFILE .*~SHOW_HEADERFILE = NO~' ${{github.workspace}}/temp/HeliOS.conf
          sed -i 's~^SHOW_INCLUDE_FILES .*~SHOW_INCLUDE_FILES = NO~' ${{github.workspace}}/temp/HeliOS.conf
          sed -i 's~^QUIET .*~QUIET = NO~' ${{github.workspace}}/temp/HeliOS.conf
          sed -i 's~^WARNINGS .*~WARNINGS = YES~' ${{github.workspace}}/temp/HeliOS.conf
          sed -i 's~^WARN_LOGFILE .*~WARN_LOGFILE = ~' ${{github.workspace}}/temp/HeliOS.conf
          sed -i 's~^INLINE_SOURCES .*~INLINE_SOURCES = NO~' ${{github.workspace}}/temp/HeliOS.conf
          sed -i 's~^VERBATIM_HEADERS .*~VERBATIM_HEADERS = NO~' ${{github.workspace}}/temp/HeliOS.conf
          cat ${{github.workspace}}/temp/HeliOS.conf

      - name: Resize HeliOS logo...
        shell: bash
        run: |
          convert -resize 300 ${{github.workspace}}/extras/HeliOS_OG_Logo.png ${{github.workspace}}/temp/HeliOS_OG_Logo.png

      - name: Generate LaTeX...
        shell: bash
        run: |
          doxygen ${{github.workspace}}/temp/HeliOS.conf
          sed -i 's~^\\begin{center}\%~\\begin{center}\%\n\\includegraphics{HeliOS_OG_Logo.png}\\\\\n\\vspace*{1cm}~' ${{github.workspace}}/temp/latex/refman.tex
          sed -i 's~Generated by Doxygen [0123456789]*.[0123456789]*.[0123456789]*~HeliOS Developer\x27s Guide~' ${{github.workspace}}/temp/latex/refman.tex
          sed -i 's~Generated by Doxygen~(C)Copyright 2022 Manny Peterson~' ${{github.workspace}}/temp/latex/refman.tex

      - name: Generate PDF from LaTeX...
        shell: bash
        run: |
          cd ${{github.workspace}}/temp/latex
          make
          cd ${{github.workspace}}

      - name: Push PDF to repository...
        shell: bash
        run: |
          cp ${{github.workspace}}/temp/latex/refman.pdf ${{github.workspace}}/doc/HeliOS_Developers_Guide.pdf
          cp ${{github.workspace}}/temp/latex/* ${{github.workspace}}/doc/latex
          git config --global user.name 'Manny Peterson'
          git config --global user.email '12462046+MannyPeterson@users.noreply.github.com'
          git add ${{github.workspace}}/doc/HeliOS_Developers_Guide.pdf
          git add ${{github.workspace}}/doc/latex/*
          git commit -m "HeliOS CI Workflow"
          git push